// 4.23.0 0xd5776c92
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_icon_round_huge_outline_action[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_HUGE_OUTLINE_ACTION_ID = 0, Size: 266x266 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_round_huge_outline_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_HUGE_OUTLINE_PRESSED_ID = 1, Size: 266x266 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_medium_outline_action[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MEDIUM_OUTLINE_ACTION_ID = 2, Size: 138x138 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_medium_outline_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MEDIUM_OUTLINE_PRESSED_ID = 3, Size: 138x138 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_tiny_outline_action[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_ACTION_ID = 4, Size: 60x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_tiny_outline_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID = 5, Size: 60x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_36_tiny_rounded_inactive[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_INACTIVE_ID = 6, Size: 100x36 pixels
extern const unsigned char image_captura_de_pantalla_2024_03_12_081018[]; // BITMAP_CAPTURA_DE_PANTALLA_2024_03_12_081018_ID = 7, Size: 912x808 pixels
extern const unsigned char image_land[]; // BITMAP_LAND_ID = 8, Size: 2558x1498 pixels
extern const unsigned char image_monas_2s[]; // BITMAP_MONAS_2S_ID = 9, Size: 754x668 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_icon_round_huge_outline_action, 0, 266, 266, 261, 110, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_round_huge_outline_pressed, 0, 266, 266, 261, 110, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_rounded_medium_outline_action, 0, 138, 138, 133, 11, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 116, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_rounded_medium_outline_pressed, 0, 138, 138, 133, 11, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 116, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_rounded_tiny_outline_action, 0, 60, 60, 55, 11, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_rounded_tiny_outline_pressed, 0, 60, 60, 55, 11, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_36_tiny_rounded_inactive, 0, 100, 36, 3, 0, 94, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_captura_de_pantalla_2024_03_12_081018, 0, 912, 808, 0, 0, 912, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 808, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_land, 0, 2558, 1498, 0, 0, 2558, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 1498, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_monas_2s, 0, 754, 668, 0, 0, 754, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 668, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
