/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_OWARI3_3_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(207);
    add(scalableImage1);

    gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_BACKGROUNDS_ACTIVE_ID));
    gauge.setPosition(0, 0, 240, 240);
    gauge.setCenter(120, 120);
    gauge.setStartEndAngle(-113.3f, 112.0f);
    gauge.setRange(0, 100);
    gauge.setValue(0);
    gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_SMOOTH_ID, 7, 67);
    gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(gauge);

    TEXTO.setPosition(240, 181, 161, 59);
    TEXTO.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    TEXTO.setLinespacing(0);
    Unicode::snprintf(TEXTOBuffer, TEXTO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8G7M).getText());
    TEXTO.setWildcard(TEXTOBuffer);
    TEXTO.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D3LT));
    add(TEXTO);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}
